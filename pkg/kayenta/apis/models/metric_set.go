// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// MetricSet MetricSet
//
// swagger:model MetricSet
type MetricSet struct {

	// attributes
	Attributes map[string]string `json:"attributes,omitempty"`

	// end time iso
	EndTimeIso string `json:"endTimeIso,omitempty"`

	// end time millis
	EndTimeMillis int64 `json:"endTimeMillis,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// start time iso
	StartTimeIso string `json:"startTimeIso,omitempty"`

	// start time millis
	StartTimeMillis int64 `json:"startTimeMillis,omitempty"`

	// step millis
	StepMillis int64 `json:"stepMillis,omitempty"`

	// tags
	Tags map[string]string `json:"tags,omitempty"`

	// values
	Values []float64 `json:"values"`
}

// Validate validates this metric set
func (m *MetricSet) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this metric set based on context it is used
func (m *MetricSet) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *MetricSet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *MetricSet) UnmarshalBinary(b []byte) error {
	var res MetricSet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
