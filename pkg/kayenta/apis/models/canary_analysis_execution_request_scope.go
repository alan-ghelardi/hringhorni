// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// CanaryAnalysisExecutionRequestScope CanaryAnalysisExecutionRequestScope
//
// Defines where to find the metrics for the experiment and control in the metrics source.
//
// swagger:model CanaryAnalysisExecutionRequestScope
type CanaryAnalysisExecutionRequestScope struct {

	// This is the location of the control which is used by some metrics sources to further differentiate metrics.Examples include a region or zone.
	// Example: us-west-2
	ControlLocation string `json:"controlLocation,omitempty"`

	// The time offset in minutes to be subtracted from the control start and end time. If none is provided, the control is evaluated at the same time as the experiment.
	// Example: 10
	ControlOffsetInMinutes int64 `json:"controlOffsetInMinutes,omitempty"`

	// This value is used to fetch the data for the control from the metrics service. It is often a server group name (e.g. ASG on EC2 or MIG on GCE).
	// Example: examplemicroservice--control-v001
	ControlScope string `json:"controlScope,omitempty"`

	// This value will be used to calculate the length of time of the analysis execution.
	// Either this value or lifetime (in the parent object) must be supplied. This field takes precedence over lifetime.
	// Example: 2018-12-17T21:56:39.689Z
	EndTimeIso string `json:"endTimeIso,omitempty"`

	// This is the location of the experiment which is used by some metrics sources to further differentiate metrics.Examples include a region or zone.
	// Example: us-west-2
	ExperimentLocation string `json:"experimentLocation,omitempty"`

	// This value is used to fetch the data for the experiment from the metrics service. It is often a server group name (e.g. ASG on EC2 or MIG on GCE).
	// Example: examplemicroservice--experiment-v001
	ExperimentScope string `json:"experimentScope,omitempty"`

	// This is an additional scope to define key values as some metric sources require additional scope params. For example New Relic and SignalFx require _scope_key to be supplied.
	ExtendedScopeParams map[string]string `json:"extendedScopeParams,omitempty"`

	// Specifies unique name of the metrics scope.
	// Example: default
	ScopeName string `json:"scopeName,omitempty"`

	// This optional value indicates the start time for looking up metrics. If this value is omitted, the current time at execution will be used instead.
	// Example: 2018-12-17T20:56:39.689Z
	StartTimeIso string `json:"startTimeIso,omitempty"`

	// This indicates the period in seconds for how often data points will be requested from the metrics sources when querying for metrics.
	// The value defaults to 60 which means a data point will be requested every 60 seconds from the data source.
	// The resulting resolution (data points per the calculated interval) needs to be at least 50 in order to produce accurate results.
	// Example: 60
	Step int64 `json:"step,omitempty"`
}

// Validate validates this canary analysis execution request scope
func (m *CanaryAnalysisExecutionRequestScope) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this canary analysis execution request scope based on context it is used
func (m *CanaryAnalysisExecutionRequestScope) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CanaryAnalysisExecutionRequestScope) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CanaryAnalysisExecutionRequestScope) UnmarshalBinary(b []byte) error {
	var res CanaryAnalysisExecutionRequestScope
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
