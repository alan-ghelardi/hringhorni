{
  "swagger": "2.0",
  "info": {
    "title": "Kayenta API",
    "contact": {}
  },
  "host": "localhost:8090",
  "basePath": "/",
  "tags": [
    {
      "name": "admin-controller",
      "description": "Admin Controller"
    },
    {
      "name": "canary-config-controller",
      "description": "Canary Config Controller"
    },
    {
      "name": "canary-controller",
      "description": "Canary Controller"
    },
    {
      "name": "canary-judges-controller",
      "description": "Canary Judges Controller"
    },
    {
      "name": "canary-result-archive-controller",
      "description": "Manipulate the archived canary result object store.  This should be used only for Kayenta maintenance.  Use the /canary endpoints for canary results."
    },
    {
      "name": "credentials-controller",
      "description": "Credentials Controller"
    },
    {
      "name": "metric-set-list-controller",
      "description": "Metric Set List Controller"
    },
    {
      "name": "metric-set-pair-list-controller",
      "description": "Metric Set Pair List Controller"
    },
    {
      "name": "metrics-service-metadata-controller",
      "description": "Metrics Service Metadata Controller"
    },
    {
      "name": "operation-handler",
      "description": "Operation Handler"
    },
    {
      "name": "pipeline-controller",
      "description": "Pipeline Controller"
    },
    {
      "name": "prometheus-fetch-controller",
      "description": "Prometheus Fetch Controller"
    },
    {
      "name": "queue-admin-controller",
      "description": "Queue Admin Controller"
    },
    {
      "name": "standalone-canary-analysis-controller",
      "description": "Standalone Canary Analysis Controller"
    }
  ],
  "paths": {
    "/admin/orca/instance/enabled": {
      "post": {
        "tags": [
          "admin-controller"
        ],
        "summary": "setInstanceEnabled",
        "operationId": "setInstanceEnabledUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "enabledWrapper",
            "description": "enabledWrapper",
            "required": true,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "boolean"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/admin/queue/hydrate": {
      "post": {
        "tags": [
          "queue-admin-controller"
        ],
        "summary": "hydrateQueue",
        "operationId": "hydrateQueueUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "dryRun",
            "description": "dryRun",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "body",
            "name": "endMs",
            "description": "endMs",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "body",
            "name": "executionId",
            "description": "executionId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "startMs",
            "description": "startMs",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/HydrateQueueOutput"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/admin/queue/kickPending": {
      "post": {
        "tags": [
          "queue-admin-controller"
        ],
        "summary": "kickPendingExecutions",
        "operationId": "kickPendingExecutionsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "pipelineConfigId",
            "description": "pipelineConfigId",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "body",
            "name": "purge",
            "description": "purge",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/admin/queue/pushMessage": {
      "post": {
        "tags": [
          "queue-admin-controller"
        ],
        "summary": "pushMessageIntoQueue",
        "operationId": "pushMessageIntoQueueUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "message",
            "description": "message",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Message"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/admin/queue/zombies/application/{application}:kill": {
      "post": {
        "tags": [
          "queue-admin-controller"
        ],
        "summary": "killApplicationZombies",
        "operationId": "killApplicationZombiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "description": "application",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "minimumActivity",
            "description": "minimumActivity",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/admin/queue/zombies/{executionId}:kill": {
      "post": {
        "tags": [
          "queue-admin-controller"
        ],
        "summary": "killZombie",
        "operationId": "killZombieUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/admin/queue/zombies:kill": {
      "post": {
        "tags": [
          "queue-admin-controller"
        ],
        "summary": "killZombies",
        "operationId": "killZombiesUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "minimumActivity",
            "description": "minimumActivity",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canary": {
      "post": {
        "tags": [
          "canary-controller"
        ],
        "summary": "Initiate a canary pipeline with CanaryConfig provided",
        "operationId": "initiateCanaryWithConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "application",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "canaryAdhocExecutionRequest",
            "description": "canaryAdhocExecutionRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CanaryAdhocExecutionRequest"
            }
          },
          {
            "name": "metricsAccountName",
            "in": "query",
            "description": "metricsAccountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentPipelineExecutionId",
            "in": "query",
            "description": "parentPipelineExecutionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryExecutionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canary/executions": {
      "get": {
        "tags": [
          "canary-controller"
        ],
        "summary": "Retrieve a list of an application's canary results",
        "operationId": "getCanaryResultsByApplicationUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "application",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit",
            "required": false,
            "type": "integer",
            "default": 20,
            "format": "int32"
          },
          {
            "name": "page",
            "in": "query",
            "description": "page",
            "required": false,
            "type": "integer",
            "default": 1,
            "format": "int32"
          },
          {
            "name": "statuses",
            "in": "query",
            "description": "statuses",
            "required": false,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CanaryExecutionStatusResponse"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canary/{canaryConfigId}": {
      "post": {
        "tags": [
          "canary-controller"
        ],
        "summary": "Initiate a canary pipeline",
        "operationId": "initiateCanaryUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "application",
            "required": false,
            "type": "string"
          },
          {
            "name": "canaryConfigId",
            "in": "path",
            "description": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "canaryExecutionRequest",
            "description": "canaryExecutionRequest",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CanaryExecutionRequest"
            }
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricsAccountName",
            "in": "query",
            "description": "metricsAccountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "parentPipelineExecutionId",
            "in": "query",
            "description": "parentPipelineExecutionId",
            "required": false,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryExecutionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canary/{canaryExecutionId}": {
      "get": {
        "tags": [
          "canary-controller"
        ],
        "summary": "Retrieve status and results for a canary run",
        "operationId": "getCanaryResultsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "canaryExecutionId",
            "in": "path",
            "description": "canaryExecutionId",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryExecutionStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canaryConfig": {
      "get": {
        "tags": [
          "canary-config-controller"
        ],
        "summary": "Retrieve a list of canary config ids and timestamps",
        "operationId": "listAllCanaryConfigsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "application",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map«string,object»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "canary-config-controller"
        ],
        "summary": "Write a canary config to object storage",
        "operationId": "storeCanaryConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "canaryConfig",
            "description": "canaryConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanaryConfig"
            }
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryConfigUpdateResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canaryConfig/{canaryConfigId}": {
      "get": {
        "tags": [
          "canary-config-controller"
        ],
        "summary": "Retrieve a canary config from object storage",
        "operationId": "loadCanaryConfigUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "canaryConfigId",
            "in": "path",
            "description": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryConfig"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "canary-config-controller"
        ],
        "summary": "Update a canary config",
        "operationId": "updateCanaryConfigUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "canaryConfig",
            "description": "canaryConfig",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanaryConfig"
            }
          },
          {
            "name": "canaryConfigId",
            "in": "path",
            "description": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryConfigUpdateResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "canary-config-controller"
        ],
        "summary": "Delete a canary config",
        "operationId": "deleteCanaryConfigUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "canaryConfigId",
            "in": "path",
            "description": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/canaryResultArchive": {
      "get": {
        "tags": [
          "canary-result-archive-controller"
        ],
        "summary": "Retrieve a list of archived canary result ids in object storage",
        "operationId": "listAllCanaryArchivedResultsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map«string,object»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "canary-result-archive-controller"
        ],
        "summary": "Create an archived canary result to object storage",
        "operationId": "storeArchivedCanaryResultUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "canaryExecutionStatusResponse",
            "description": "canaryExecutionStatusResponse",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanaryExecutionStatusResponse"
            }
          },
          {
            "name": "pipelineId",
            "in": "query",
            "description": "pipelineId",
            "required": false,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryArchiveResultUpdateResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/canaryResultArchive/{pipelineId}": {
      "get": {
        "tags": [
          "canary-result-archive-controller"
        ],
        "summary": "Retrieve an archived canary result from object storage",
        "operationId": "loadArchivedCanaryResultUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "pipelineId",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryExecutionStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "put": {
        "tags": [
          "canary-result-archive-controller"
        ],
        "summary": "Update an archived canary result in object storage",
        "operationId": "updateArchivedCanaryResultUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "canaryExecutionStatusResponse",
            "description": "canaryExecutionStatusResponse",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanaryExecutionStatusResponse"
            }
          },
          {
            "name": "pipelineId",
            "in": "path",
            "description": "pipelineId",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryArchiveResultUpdateResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "canary-result-archive-controller"
        ],
        "summary": "Delete an archived canary result from object storage",
        "operationId": "deleteArchivedCanaryResultUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "pipelineId",
            "in": "path",
            "description": "pipelineId",
            "required": true,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/credentials": {
      "get": {
        "tags": [
          "credentials-controller"
        ],
        "summary": "Retrieve a list of all configured credentials",
        "operationId": "listUsingGET_1",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AccountCredentials"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/fetch/prometheus/query": {
      "post": {
        "tags": [
          "prometheus-fetch-controller"
        ],
        "summary": "queryMetrics",
        "operationId": "queryMetricsUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "customFilter",
            "in": "query",
            "description": "customFilter",
            "required": false,
            "type": "string"
          },
          {
            "name": "dryRun",
            "in": "query",
            "description": "dryRun",
            "required": false,
            "type": "boolean",
            "default": false,
            "allowEmptyValue": false,
            "x-example": false
          },
          {
            "name": "end",
            "in": "query",
            "description": "An ISO format timestamp, e.g.: 2018-03-08T01:12:22Z",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "groupByFields",
            "in": "query",
            "description": "groupByFields",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "labelBindings",
            "in": "query",
            "description": "labelBindings",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi",
            "default": "mode=~\"user|system\"",
            "allowEmptyValue": false
          },
          {
            "name": "location",
            "in": "query",
            "description": "The location to use when scoping the query. Valid choices depend on what cloud platform the query relates to (could be a region, a namespace, or something else).",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "metricName",
            "in": "query",
            "description": "metricName",
            "required": false,
            "type": "string",
            "default": "node_cpu",
            "allowEmptyValue": false
          },
          {
            "name": "metricSetName",
            "in": "query",
            "description": "metricSetName",
            "required": false,
            "type": "string",
            "default": "cpu",
            "allowEmptyValue": false
          },
          {
            "name": "metricsAccountName",
            "in": "query",
            "description": "metricsAccountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "project",
            "in": "query",
            "description": "project",
            "required": false,
            "type": "string"
          },
          {
            "name": "resourceType",
            "in": "query",
            "description": "Used to identify the type of the resource being queried, e.g. aws_ec2_instance, gce_instance.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "scope",
            "in": "query",
            "description": "The name of the resource to use when scoping the query. The most common use-case is to provide a server group name.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "start",
            "in": "query",
            "description": "An ISO format timestamp, e.g.: 2018-03-08T01:02:53Z",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "step",
            "in": "query",
            "description": "seconds",
            "required": false,
            "type": "integer",
            "format": "int64",
            "allowEmptyValue": false,
            "x-example": 60
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/health": {
      "get": {
        "tags": [
          "operation-handler"
        ],
        "summary": "handle",
        "operationId": "handleUsingGET",
        "produces": [
          "application/vnd.spring-boot.actuator.v3+json",
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/judges": {
      "get": {
        "tags": [
          "canary-judges-controller"
        ],
        "summary": "Retrieve a list of all configured canary judges",
        "operationId": "listUsingGET",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CanaryJudge"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/judges/comparison": {
      "post": {
        "tags": [
          "canary-judges-controller"
        ],
        "summary": "Apply a pair of judges to a canned set of data",
        "operationId": "initiateJudgeComparisonUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "canaryConfigId",
            "in": "query",
            "description": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "marginalThreshold",
            "in": "query",
            "description": "marginalThreshold",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "metricSetPairListId",
            "in": "query",
            "description": "metricSetPairListId",
            "required": true,
            "type": "string"
          },
          {
            "name": "overrideCanaryJudge1",
            "in": "query",
            "description": "The name of the first judge to use, e.g. NetflixACAJudge-v1.0, dredd-v1.0.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "overrideCanaryJudge2",
            "in": "query",
            "description": "The name of the second judge to use, e.g. NetflixACAJudge-v1.0, dredd-v1.0.",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "passThreshold",
            "in": "query",
            "description": "passThreshold",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryExecutionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/judges/comparison/{executionId}": {
      "get": {
        "tags": [
          "canary-judges-controller"
        ],
        "summary": "Retrieve the results of a judge comparison",
        "operationId": "getJudgeComparisonResultsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/judges/judge": {
      "post": {
        "tags": [
          "canary-judges-controller"
        ],
        "summary": "Exercise a judge directly, without any orchestration or querying of metrics services",
        "operationId": "judgeUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "canaryConfigId",
            "in": "query",
            "description": "canaryConfigId",
            "required": true,
            "type": "string"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "configurationAccountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "marginalThreshold",
            "in": "query",
            "description": "marginalThreshold",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "metricSetPairListId",
            "in": "query",
            "description": "metricSetPairListId",
            "required": true,
            "type": "string"
          },
          {
            "name": "passThreshold",
            "in": "query",
            "description": "passThreshold",
            "required": true,
            "type": "number",
            "format": "double"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "storageAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryJudgeResult"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/metadata/metricsService": {
      "get": {
        "tags": [
          "metrics-service-metadata-controller"
        ],
        "summary": "Retrieve a list of descriptors for use in populating the canary config ui",
        "operationId": "listMetadataUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "filter",
            "in": "query",
            "description": "filter",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricsAccountName",
            "in": "query",
            "description": "metricsAccountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/metricSetList": {
      "get": {
        "tags": [
          "metric-set-list-controller"
        ],
        "summary": "Retrieve a list of metric set list ids and timestamps",
        "operationId": "listAllMetricSetListsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map«string,object»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "metric-set-list-controller"
        ],
        "summary": "Write a metric set list to object storage",
        "operationId": "storeMetricSetListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "metricSetList",
            "description": "metricSetList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricSet"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/metricSetList/{metricSetListId}": {
      "get": {
        "tags": [
          "metric-set-list-controller"
        ],
        "summary": "Retrieve a metric set list from object storage",
        "operationId": "loadMetricSetListUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricSetListId",
            "in": "path",
            "description": "metricSetListId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricSet"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "metric-set-list-controller"
        ],
        "summary": "Delete a metric set list",
        "operationId": "deleteMetricSetListUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricSetListId",
            "in": "path",
            "description": "metricSetListId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/metricSetPairList": {
      "get": {
        "tags": [
          "metric-set-pair-list-controller"
        ],
        "summary": "Retrieve a list of metric set pair list ids and timestamps",
        "operationId": "listAllMetricSetPairListsUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Map«string,object»"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "metric-set-pair-list-controller"
        ],
        "summary": "Write a metric set pair list to object storage",
        "operationId": "storeMetricSetPairListUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "in": "body",
            "name": "metricSetPairList",
            "description": "metricSetPairList",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricSetPair"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/metricSetPairList/{metricSetPairListId}": {
      "get": {
        "tags": [
          "metric-set-pair-list-controller"
        ],
        "summary": "Retrieve a metric set pair list from object storage",
        "operationId": "loadMetricSetPairListUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricSetPairListId",
            "in": "path",
            "description": "metricSetPairListId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MetricSetPair"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "metric-set-pair-list-controller"
        ],
        "summary": "Delete a metric set pair list",
        "operationId": "deleteMetricSetPairListUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricSetPairListId",
            "in": "path",
            "description": "metricSetPairListId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/metricSetPairList/{metricSetPairListId}/{metricSetPairId}": {
      "get": {
        "tags": [
          "metric-set-pair-list-controller"
        ],
        "summary": "Retrieve a single metric set pair from a metricSetPairList from object storage",
        "operationId": "loadMetricSetPairUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "description": "accountName",
            "required": false,
            "type": "string"
          },
          {
            "name": "metricSetPairId",
            "in": "path",
            "description": "metricSetPairId",
            "required": true,
            "type": "string"
          },
          {
            "name": "metricSetPairListId",
            "in": "path",
            "description": "metricSetPairListId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MetricSetPair"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/pipelines": {
      "get": {
        "tags": [
          "pipeline-controller"
        ],
        "summary": "List all pipeline IDs",
        "operationId": "listUsingGET_2",
        "produces": [
          "*/*"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/pipelines/start": {
      "post": {
        "tags": [
          "pipeline-controller"
        ],
        "summary": "Initiate a pipeline execution",
        "operationId": "startUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "map",
            "description": "map",
            "required": true,
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/pipelines/{executionId}": {
      "get": {
        "tags": [
          "pipeline-controller"
        ],
        "summary": "Retrieve a pipeline execution",
        "operationId": "getPipelineUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PipelineExecution"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "pipeline-controller"
        ],
        "summary": "Delete a pipeline execution",
        "operationId": "deleteUsingDELETE",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ResponseEntity"
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "deprecated": false
      }
    },
    "/pipelines/{executionId}/cancel": {
      "put": {
        "tags": [
          "pipeline-controller"
        ],
        "summary": "Cancel a pipeline execution",
        "operationId": "cancelUsingPUT",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "executionId",
            "in": "path",
            "description": "executionId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/standalone_canary_analysis": {
      "post": {
        "tags": [
          "standalone-canary-analysis-controller"
        ],
        "summary": "Initiate an canary analysis execution with multiple canary judgements with the CanaryConfig provided in the request body",
        "operationId": "initiateCanaryAnalysisExecutionWithConfigUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "The application under test",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "examplecanarymicroservice"
          },
          {
            "in": "body",
            "name": "canaryAnalysisAdhocExecutionRequest",
            "description": "canaryAnalysisAdhocExecutionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanaryAnalysisAdhocExecutionRequest"
            }
          },
          {
            "name": "metricsAccountName",
            "in": "query",
            "description": "The account that has the metrics for the application under test",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "some-metrics-account"
          },
          {
            "name": "parentPipelineExecutionId",
            "in": "query",
            "description": "The parent pipeline execution id, if this is being executed as a StageExecution in another pipeline",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "01CYZCD53RBX2KR2Q9GY0218UI"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "The account that will be used to store results",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "some-storage-account"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The initiating user",
            "required": false,
            "type": "string",
            "default": "anonymous",
            "allowEmptyValue": false,
            "x-example": "justin.field@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryAnalysisExecutionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/standalone_canary_analysis/{canaryAnalysisExecutionId}": {
      "get": {
        "tags": [
          "standalone-canary-analysis-controller"
        ],
        "summary": "Retrieve status and results for a canary analysis execution",
        "operationId": "getCanaryAnalysisExecutionUsingGET",
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "canaryAnalysisExecutionId",
            "in": "path",
            "description": "The id for the Canary Analysis Execution",
            "required": false,
            "type": "string"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "The account to use to try and find the execution if not found in the execution repo",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "some-storage-account"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryAnalysisExecutionStatusResponse"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    },
    "/standalone_canary_analysis/{canaryConfigId}": {
      "post": {
        "tags": [
          "standalone-canary-analysis-controller"
        ],
        "summary": "Initiate a canary analysis execution with multiple canary judgements using a stored canary config",
        "operationId": "initiateCanaryAnalysisUsingPOST",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "*/*"
        ],
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "The application under test",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "examplecanarymicroservice"
          },
          {
            "in": "body",
            "name": "canaryAnalysisExecutionRequest",
            "description": "canaryAnalysisExecutionRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CanaryAnalysisExecutionRequest"
            }
          },
          {
            "name": "canaryConfigId",
            "in": "path",
            "description": "The id for the canary configuration to use for the analysis execution",
            "required": false,
            "type": "string"
          },
          {
            "name": "configurationAccountName",
            "in": "query",
            "description": "The account that has the supplied canary config id",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "some-config-account"
          },
          {
            "name": "metricsAccountName",
            "in": "query",
            "description": "The account that has the metrics for the application under test",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "some-metrics-account"
          },
          {
            "name": "parentPipelineExecutionId",
            "in": "query",
            "description": "The parent pipeline execution id, if this is being executed as a StageExecution in another pipeline",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "01CYZCD53RBX2KR2Q9GY0218UI"
          },
          {
            "name": "storageAccountName",
            "in": "query",
            "description": "The account that will be used to store results",
            "required": false,
            "type": "string",
            "allowEmptyValue": false,
            "x-example": "some-storage-account"
          },
          {
            "name": "user",
            "in": "query",
            "description": "The initiating user",
            "required": false,
            "type": "string",
            "default": "anonymous",
            "allowEmptyValue": false,
            "x-example": "justin.field@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CanaryAnalysisExecutionResponse"
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AccountCredentials": {
      "type": "object",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "recommendedLocations": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "supportedTypes": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "METRICS_STORE",
              "OBJECT_STORE",
              "CONFIGURATION_STORE",
              "REMOTE_JUDGE"
            ]
          }
        },
        "type": {
          "type": "string"
        }
      },
      "title": "AccountCredentials"
    },
    "Action": {
      "type": "object",
      "required": [
        "context",
        "description"
      ],
      "properties": {
        "context": {
          "$ref": "#/definitions/ActionContext"
        },
        "description": {
          "type": "string"
        },
        "message": {
          "$ref": "#/definitions/Message"
        }
      },
      "title": "Action"
    },
    "ActionContext": {
      "type": "object",
      "properties": {
        "stageId": {
          "type": "string"
        },
        "stageStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "stageType": {
          "type": "string"
        },
        "taskId": {
          "type": "string"
        },
        "taskStartTime": {
          "type": "integer",
          "format": "int64"
        },
        "taskType": {
          "type": "string"
        }
      },
      "title": "ActionContext"
    },
    "Artifact": {
      "type": "object",
      "properties": {
        "artifactAccount": {
          "type": "string"
        },
        "customKind": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        },
        "metadata": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "provenance": {
          "type": "string"
        },
        "reference": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "uuid": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "Artifact"
    },
    "Attribute": {
      "type": "object",
      "title": "Attribute"
    },
    "AuthenticationDetails": {
      "type": "object",
      "properties": {
        "allowedAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "user": {
          "type": "string"
        }
      },
      "title": "AuthenticationDetails"
    },
    "CanaryAdhocExecutionRequest": {
      "type": "object",
      "properties": {
        "canaryConfig": {
          "$ref": "#/definitions/CanaryConfig"
        },
        "executionRequest": {
          "$ref": "#/definitions/CanaryExecutionRequest"
        }
      },
      "title": "CanaryAdhocExecutionRequest"
    },
    "CanaryAnalysisAdhocExecutionRequest": {
      "type": "object",
      "properties": {
        "canaryConfig": {
          "description": "The canary configuration to use for the canary analysis execution.",
          "$ref": "#/definitions/CanaryConfig"
        },
        "executionRequest": {
          "description": "The canary analysis configuration request object.",
          "$ref": "#/definitions/CanaryAnalysisExecutionRequest"
        }
      },
      "title": "CanaryAnalysisAdhocExecutionRequest",
      "description": "Wrapper object around canary config and execution request for the ad-hoc endpoint."
    },
    "CanaryAnalysisExecutionRequest": {
      "type": "object",
      "properties": {
        "analysisIntervalMins": {
          "type": "integer",
          "format": "int64",
          "description": "The value of analysisIntervalMins is used to calculate how many judgements will occur over the lifetime of the canary analysis execution.\nIf this field is omitted then it will default to lifetime.\nIf this field is set to a value greater than lifetime, it will be reset to lifetime."
        },
        "beginAfterMins": {
          "type": "integer",
          "format": "int64",
          "description": "This is how long the canary analysis execution will wait before beginning the analysis phase. This can be useful in a continuous integration situation where the canary analysis execution is triggered asynchronously and metrics are ready for consumption after a time period."
        },
        "lifetimeDurationMins": {
          "type": "integer",
          "format": "int64",
          "description": "This is the amount of time in minutes the analysis phase of the canary analysis execution will last. Either this value or endTimeIso (in scopes) must be set. "
        },
        "lookbackMins": {
          "type": "integer",
          "format": "int64",
          "description": "If this optional value is supplied, then the canary analysis execution will perform judgements on a sliding time window. The judgements will be from endTime - lookbackMins to startTime + (judgementNumber * interval). If lookbackMins is not exactly equal to interval, then the metrics analyzed will be overlapping or discontinuous.\nIf this field is omitted, the judgements will be performed on a growing time window, from startTime + to startTime + (judgementNumber * interval).\n"
        },
        "scopes": {
          "type": "array",
          "description": "This is a list of Canary Analysis Execution Request scopes. This directs the Canary Analysis Execution where to find the experiment and control metrics in the metrics source. The list must have at least one value.",
          "items": {
            "$ref": "#/definitions/CanaryAnalysisExecutionRequestScope"
          }
        },
        "siteLocal": {
          "type": "object",
          "description": "A map of customizable data that among other things can be used in org-specific external modules such as event listeners to handle notifications such as Slack, email, async http callbacks, etc.\nThe contents of this field don't have an effect on the actual canary analysis execution."
        },
        "thresholds": {
          "description": "The thresholds that will be used for the canary judgements. When multiple judgements are occurring during the lifetime of this execution, the last judgement must have a score that meets or exceeds the pass threshold, all previous judgement scores must meet or exceed the marginal score.",
          "$ref": "#/definitions/CanaryClassifierThresholdsConfig"
        }
      },
      "title": "CanaryAnalysisExecutionRequest",
      "description": "The canary analysis configuration request object for initiating a canary analysis execution."
    },
    "CanaryAnalysisExecutionRequestScope": {
      "type": "object",
      "properties": {
        "controlLocation": {
          "type": "string",
          "example": "us-west-2",
          "description": "This is the location of the control which is used by some metrics sources to further differentiate metrics.Examples include a region or zone."
        },
        "controlOffsetInMinutes": {
          "type": "integer",
          "format": "int64",
          "example": 10,
          "description": "The time offset in minutes to be subtracted from the control start and end time. If none is provided, the control is evaluated at the same time as the experiment."
        },
        "controlScope": {
          "type": "string",
          "example": "examplemicroservice--control-v001",
          "description": "This value is used to fetch the data for the control from the metrics service. It is often a server group name (e.g. ASG on EC2 or MIG on GCE)."
        },
        "endTimeIso": {
          "type": "string",
          "example": "2018-12-17T21:56:39.689Z",
          "description": "This value will be used to calculate the length of time of the analysis execution.\nEither this value or lifetime (in the parent object) must be supplied. This field takes precedence over lifetime."
        },
        "experimentLocation": {
          "type": "string",
          "example": "us-west-2",
          "description": "This is the location of the experiment which is used by some metrics sources to further differentiate metrics.Examples include a region or zone."
        },
        "experimentScope": {
          "type": "string",
          "example": "examplemicroservice--experiment-v001",
          "description": "This value is used to fetch the data for the experiment from the metrics service. It is often a server group name (e.g. ASG on EC2 or MIG on GCE)."
        },
        "extendedScopeParams": {
          "type": "object",
          "description": "This is an additional scope to define key values as some metric sources require additional scope params. For example New Relic and SignalFx require _scope_key to be supplied.",
          "additionalProperties": {
            "type": "string"
          }
        },
        "scopeName": {
          "type": "string",
          "example": "default",
          "description": "Specifies unique name of the metrics scope."
        },
        "startTimeIso": {
          "type": "string",
          "example": "2018-12-17T20:56:39.689Z",
          "description": "This optional value indicates the start time for looking up metrics. If this value is omitted, the current time at execution will be used instead."
        },
        "step": {
          "type": "integer",
          "format": "int64",
          "example": 60,
          "description": "This indicates the period in seconds for how often data points will be requested from the metrics sources when querying for metrics.\nThe value defaults to 60 which means a data point will be requested every 60 seconds from the data source.\nThe resulting resolution (data points per the calculated interval) needs to be at least 50 in order to produce accurate results."
        }
      },
      "title": "CanaryAnalysisExecutionRequestScope",
      "description": "Defines where to find the metrics for the experiment and control in the metrics source."
    },
    "CanaryAnalysisExecutionResponse": {
      "type": "object",
      "properties": {
        "canaryAnalysisExecutionId": {
          "type": "string",
          "example": "01CYZCD53RBX2KR2Q9GY0218TV",
          "description": "The id of the execution"
        }
      },
      "title": "CanaryAnalysisExecutionResponse",
      "description": "Wrapper object around the canary analysis execution id."
    },
    "CanaryAnalysisExecutionResult": {
      "type": "object",
      "properties": {
        "buildTimeIso": {
          "type": "string",
          "description": "buildTimeIso is an ISO 8061 string and refers to the time the pipeline was first created."
        },
        "canaryExecutionResults": {
          "type": "array",
          "description": "This is a list of canary execution summaries.",
          "items": {
            "$ref": "#/definitions/CanaryExecutionResult"
          }
        },
        "canaryScoreMessage": {
          "type": "string",
          "description": "This string describes the aggregated judgement results."
        },
        "canaryScores": {
          "type": "array",
          "description": "This is an ordered list of the individual judgement scores. The last score is used for determining the final result.",
          "items": {
            "type": "number",
            "format": "double"
          }
        },
        "didPassThresholds": {
          "type": "boolean",
          "description": "This boolean represents whether the canary passed the defined thresholds."
        },
        "endTimeIso": {
          "type": "string",
          "description": "endTimeIso is an ISO 8061 string and refers to the time the pipeline ended, either successfully or unsuccessfully."
        },
        "hasWarnings": {
          "type": "boolean",
          "description": "This boolean is set to true if any of the judgements had warnings."
        },
        "startTimeIso": {
          "type": "string",
          "description": "startTimeIso is an ISO 8061 string and refers to the time the pipeline started running."
        }
      },
      "title": "CanaryAnalysisExecutionResult",
      "description": "The canary analysis execution results."
    },
    "CanaryAnalysisExecutionStatusResponse": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string",
          "description": "The application under test."
        },
        "buildTimeIso": {
          "type": "string",
          "description": "buildTimeIso is an ISO 8061 string and refers to the time the pipeline was first created."
        },
        "buildTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "buildTimeMillis is in epoch millis time and refers to the time the pipeline was first created."
        },
        "canaryAnalysisExecutionRequest": {
          "description": "The supplied request configuration.",
          "$ref": "#/definitions/CanaryAnalysisExecutionRequest"
        },
        "canaryAnalysisExecutionResult": {
          "description": "This is the actual result of the canary analysis execution which will be present when complete is true.",
          "$ref": "#/definitions/CanaryAnalysisExecutionResult"
        },
        "canaryConfig": {
          "description": "The supplied or retrieved canary configuration used.",
          "$ref": "#/definitions/CanaryConfig"
        },
        "canaryConfigId": {
          "type": "string",
          "description": "This is the supplied canary config id if one was provided."
        },
        "complete": {
          "type": "boolean",
          "description": "This indicates that the task/stage/pipeline has finished its work, independent of whether it was successful."
        },
        "endTimeIso": {
          "type": "string",
          "description": "endTimeIso is an ISO 8061 string and refers to the time the pipeline ended, either successfully or unsuccessfully."
        },
        "endTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "endTimeMillis is in epoch millis time and refers to the time the pipeline ended, either successfully or unsuccessfully."
        },
        "exception": {
          "type": "object",
          "description": "This shows the first exception if any occurred."
        },
        "executionStatus": {
          "type": "string",
          "description": "This is the Orca Execution Status for the Canary Analysis Pipeline Execution.",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "SUSPENDED",
            "SUCCEEDED",
            "FAILED_CONTINUE",
            "TERMINAL",
            "CANCELED",
            "REDIRECT",
            "STOPPED",
            "SKIPPED",
            "BUFFERED"
          ]
        },
        "metricsAccountName": {
          "type": "string",
          "description": "The resolved metrics account name."
        },
        "parentPipelineExecutionId": {
          "type": "string",
          "description": "This is the parent pipeline execution id if one was provided."
        },
        "pipelineId": {
          "type": "string",
          "description": "This is the pipeline id of this execution."
        },
        "stageStatus": {
          "type": "array",
          "description": "This is a map of StageExecution statuses which is useful for gaining insight into progress of the execution.",
          "items": {
            "$ref": "#/definitions/StageMetadata"
          }
        },
        "startTimeIso": {
          "type": "string",
          "description": "startTimeIso is an ISO 8061 string and refers to the time the pipeline started running."
        },
        "startTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "startTimeIso is an ISO 8061 string and refers to the time the pipeline started running."
        },
        "status": {
          "type": "string",
          "description": "This is the lowercased serialized Orca status which is similar to the status in the /canary endpoints."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The resolved storage account name."
        },
        "user": {
          "type": "string",
          "description": "This is the initiating user. If none was supplied this will be anonymous."
        }
      },
      "title": "CanaryAnalysisExecutionStatusResponse",
      "description": "The canary analysis execution status response."
    },
    "CanaryAnalysisResult": {
      "type": "object",
      "properties": {
        "classification": {
          "type": "string"
        },
        "classificationReason": {
          "type": "string"
        },
        "controlMetadata": {
          "type": "object"
        },
        "critical": {
          "type": "boolean"
        },
        "experimentMetadata": {
          "type": "object"
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string"
        },
        "muted": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "resultMetadata": {
          "type": "object"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "CanaryAnalysisResult"
    },
    "CanaryArchiveResultUpdateResponse": {
      "type": "object",
      "properties": {
        "pipelineId": {
          "type": "string"
        }
      },
      "title": "CanaryArchiveResultUpdateResponse"
    },
    "CanaryClassifierConfig": {
      "type": "object",
      "properties": {
        "groupWeights": {
          "type": "object",
          "example": {
            "pod-group": 70,
            "app-group": 30
          },
          "description": "List of each metrics group along with its corresponding weight. Weights must total 100.",
          "additionalProperties": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "CanaryClassifierConfig",
      "description": "The classification configuration, such as group weights."
    },
    "CanaryClassifierThresholdsConfig": {
      "type": "object",
      "properties": {
        "marginal": {
          "type": "number",
          "format": "double",
          "example": 50,
          "description": "If canary score is lower than this value -- canary is considered marginal (failed)."
        },
        "pass": {
          "type": "number",
          "format": "double",
          "example": 75,
          "description": "If canary score is higher than this value -- canary is considered successful."
        }
      },
      "title": "CanaryClassifierThresholdsConfig",
      "description": "Sets thresholds for canary score."
    },
    "CanaryConfig": {
      "type": "object",
      "properties": {
        "applications": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "classifier": {
          "$ref": "#/definitions/CanaryClassifierConfig"
        },
        "configVersion": {
          "type": "string"
        },
        "createdTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "createdTimestampIso": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "judge": {
          "$ref": "#/definitions/CanaryJudgeConfig"
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CanaryMetricConfig"
          }
        },
        "name": {
          "type": "string"
        },
        "templates": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "updatedTimestamp": {
          "type": "integer",
          "format": "int64"
        },
        "updatedTimestampIso": {
          "type": "string"
        }
      },
      "title": "CanaryConfig"
    },
    "CanaryConfigUpdateResponse": {
      "type": "object",
      "properties": {
        "canaryConfigId": {
          "type": "string"
        }
      },
      "title": "CanaryConfigUpdateResponse"
    },
    "CanaryExecutionRequest": {
      "type": "object",
      "properties": {
        "metadata": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Metadata"
          }
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/CanaryScopePair"
          }
        },
        "siteLocal": {
          "type": "object"
        },
        "thresholds": {
          "$ref": "#/definitions/CanaryClassifierThresholdsConfig"
        }
      },
      "title": "CanaryExecutionRequest"
    },
    "CanaryExecutionResponse": {
      "type": "object",
      "properties": {
        "canaryExecutionId": {
          "type": "string"
        }
      },
      "title": "CanaryExecutionResponse"
    },
    "CanaryExecutionResult": {
      "type": "object",
      "properties": {
        "buildTimeIso": {
          "type": "string",
          "description": "buildTimeIso is an ISO 8061 string and refers to the time the pipeline was first created."
        },
        "buildTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "buildTimeMillis is in epoch millis time and refers to the time the pipeline was first created."
        },
        "configurationAccountName": {
          "type": "string",
          "description": "If set, these are the account names used for this run."
        },
        "endTimeIso": {
          "type": "string",
          "description": "endTimeIso is an ISO 8061 string and refers to the time the pipeline ended, either successfully or unsuccessfully."
        },
        "endTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "endTimeMillis is in epoch millis time and refers to the time the pipeline ended, either successfully or unsuccessfully."
        },
        "exception": {
          "type": "object",
          "description": "This shows the first exception in the Judgement Execution if any occurred."
        },
        "executionId": {
          "type": "string",
          "description": "This is the execution id of the canary judgement which can be used in the canary controller APIs to fetch the full result."
        },
        "executionStatus": {
          "type": "string",
          "description": "This is the Orca Execution Status for the Canary Judgement Execution.",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "SUSPENDED",
            "SUCCEEDED",
            "FAILED_CONTINUE",
            "TERMINAL",
            "CANCELED",
            "REDIRECT",
            "STOPPED",
            "SKIPPED",
            "BUFFERED"
          ]
        },
        "judgementEndTimeIso": {
          "type": "string",
          "description": "judgementEndTimeIso is an ISO 8061 string and is the end time used to query the metric source for this judgement."
        },
        "judgementEndTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "judgementEndTimeMillis is in epoch millis time and is the end time used to query the metric source for this judgement."
        },
        "judgementStartTimeIso": {
          "type": "string",
          "description": "judgementStartTimeIso is an ISO 8061 string and is the start time used to query the metric source for this judgement."
        },
        "judgementStartTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "judgementStartTimeMillis is in epoch millis time and is the start time used to query the metric source for this judgement."
        },
        "metricSetPairListId": {
          "type": "string",
          "description": "This is the metric set pair list id for this canary judgement execution which can be used for obtaining the raw metrics via the API."
        },
        "result": {
          "description": "The result of the canary judgement execution.",
          "$ref": "#/definitions/CanaryResult"
        },
        "startTimeIso": {
          "type": "string",
          "description": "startTimeIso is an ISO 8061 string and refers to the time the pipeline started running."
        },
        "startTimeMillis": {
          "type": "integer",
          "format": "int64",
          "description": "startTimeMillis is in epoch millis time and refers to the time the pipeline started running."
        },
        "storageAccountName": {
          "type": "string",
          "description": "If set, these are the account names used for this run."
        },
        "warnings": {
          "type": "array",
          "description": "This shows any warnings that occurred during the canary judgement.",
          "items": {
            "type": "string"
          }
        }
      },
      "title": "CanaryExecutionResult",
      "description": "Summary Result of the Judgement Executions. See GET /canary/${this.executionId} for full result."
    },
    "CanaryExecutionStatusResponse": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string"
        },
        "buildTimeIso": {
          "type": "string"
        },
        "buildTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "canaryConfigId": {
          "type": "string"
        },
        "canaryExecutionRequest": {
          "$ref": "#/definitions/CanaryExecutionRequest"
        },
        "complete": {
          "type": "boolean"
        },
        "config": {
          "$ref": "#/definitions/CanaryConfig"
        },
        "configurationAccountName": {
          "type": "string"
        },
        "endTimeIso": {
          "type": "string"
        },
        "endTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "exception": {
          "type": "object"
        },
        "metricSetPairListId": {
          "type": "string"
        },
        "metricsAccountName": {
          "type": "string"
        },
        "parentPipelineExecutionId": {
          "type": "string"
        },
        "pipelineId": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/CanaryResult"
        },
        "stageStatus": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "startTimeIso": {
          "type": "string"
        },
        "startTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string"
        },
        "storageAccountName": {
          "type": "string"
        }
      },
      "title": "CanaryExecutionStatusResponse"
    },
    "CanaryJudge": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "visible": {
          "type": "boolean"
        }
      },
      "title": "CanaryJudge"
    },
    "CanaryJudgeConfig": {
      "type": "object",
      "required": [
        "judgeConfigurations",
        "name"
      ],
      "properties": {
        "judgeConfigurations": {
          "type": "object",
          "example": {},
          "description": "Additional judgement configuration. As of right now, this should always be an empty object."
        },
        "name": {
          "type": "string",
          "example": "NetflixACAJudge-v1.0",
          "description": "Judge to use, as of right now there is only `NetflixACAJudge-v1.0`."
        }
      },
      "title": "CanaryJudgeConfig",
      "description": "Judge configuration."
    },
    "CanaryJudgeGroupScore": {
      "type": "object",
      "properties": {
        "classification": {
          "type": "string"
        },
        "classificationReason": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "CanaryJudgeGroupScore"
    },
    "CanaryJudgeResult": {
      "type": "object",
      "properties": {
        "groupScores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CanaryJudgeGroupScore"
          }
        },
        "judgeName": {
          "type": "string"
        },
        "results": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CanaryAnalysisResult"
          }
        },
        "score": {
          "$ref": "#/definitions/CanaryJudgeScore"
        }
      },
      "title": "CanaryJudgeResult"
    },
    "CanaryJudgeScore": {
      "type": "object",
      "properties": {
        "classification": {
          "type": "string"
        },
        "classificationReason": {
          "type": "string"
        },
        "score": {
          "type": "number",
          "format": "double"
        }
      },
      "title": "CanaryJudgeScore"
    },
    "CanaryMetricConfig": {
      "type": "object",
      "properties": {
        "analysisConfigurations": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/CanaryMetricSetQueryConfig"
        },
        "scopeName": {
          "type": "string"
        }
      },
      "title": "CanaryMetricConfig"
    },
    "CanaryMetricSetQueryConfig": {
      "type": "object",
      "properties": {
        "customFilter": {
          "type": "string"
        },
        "customFilterTemplate": {
          "type": "string"
        },
        "customInlineTemplate": {
          "type": "string"
        },
        "serviceType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "title": "CanaryMetricSetQueryConfig"
    },
    "CanaryResult": {
      "type": "object",
      "properties": {
        "canaryDuration": {
          "type": "string"
        },
        "judgeResult": {
          "$ref": "#/definitions/CanaryJudgeResult"
        }
      },
      "title": "CanaryResult"
    },
    "CanaryScope": {
      "type": "object",
      "properties": {
        "end": {
          "type": "string",
          "format": "date-time"
        },
        "extendedScopeParams": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "location": {
          "type": "string"
        },
        "scope": {
          "type": "string"
        },
        "start": {
          "type": "string",
          "format": "date-time"
        },
        "step": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "CanaryScope"
    },
    "CanaryScopePair": {
      "type": "object",
      "properties": {
        "controlScope": {
          "$ref": "#/definitions/CanaryScope"
        },
        "experimentScope": {
          "$ref": "#/definitions/CanaryScope"
        }
      },
      "title": "CanaryScopePair"
    },
    "Duration": {
      "type": "object",
      "properties": {
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "negative": {
          "type": "boolean"
        },
        "seconds": {
          "type": "integer",
          "format": "int64"
        },
        "units": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TemporalUnit"
          }
        },
        "zero": {
          "type": "boolean"
        }
      },
      "title": "Duration"
    },
    "ExpectedArtifact": {
      "type": "object",
      "properties": {
        "boundArtifact": {
          "$ref": "#/definitions/Artifact"
        },
        "defaultArtifact": {
          "$ref": "#/definitions/Artifact"
        },
        "id": {
          "type": "string"
        },
        "matchArtifact": {
          "$ref": "#/definitions/Artifact"
        },
        "useDefaultArtifact": {
          "type": "boolean"
        },
        "usePriorArtifact": {
          "type": "boolean"
        }
      },
      "title": "ExpectedArtifact"
    },
    "HydrateQueueOutput": {
      "type": "object",
      "required": [
        "dryRun",
        "executions"
      ],
      "properties": {
        "dryRun": {
          "type": "boolean"
        },
        "executions": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/ProcessedExecution"
          }
        }
      },
      "title": "HydrateQueueOutput"
    },
    "LastModifiedDetails": {
      "type": "object",
      "properties": {
        "allowedAccounts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "lastModifiedTime": {
          "type": "integer",
          "format": "int64"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "LastModifiedDetails"
    },
    "Map": {
      "type": "object",
      "title": "Map",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Map«string,object»": {
      "type": "object",
      "title": "Map«string,object»",
      "additionalProperties": {
        "type": "object"
      }
    },
    "Map«string,string»": {
      "type": "object",
      "title": "Map«string,string»",
      "additionalProperties": {
        "type": "string"
      }
    },
    "Message": {
      "type": "object",
      "required": [
        "attributes"
      ],
      "properties": {
        "ackTimeoutMs": {
          "type": "integer",
          "format": "int64"
        },
        "attributes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Attribute"
          }
        }
      },
      "title": "Message"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "title": "Metadata"
    },
    "MetricSet": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "endTimeIso": {
          "type": "string"
        },
        "endTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "startTimeIso": {
          "type": "string"
        },
        "startTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "stepMillis": {
          "type": "integer",
          "format": "int64"
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "title": "MetricSet"
    },
    "MetricSetPair": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "scopes": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/MetricSetScope"
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "values": {
          "type": "object",
          "additionalProperties": {
            "type": "array",
            "items": {
              "type": "number",
              "format": "double"
            }
          }
        }
      },
      "title": "MetricSetPair"
    },
    "MetricSetScope": {
      "type": "object",
      "properties": {
        "startTimeIso": {
          "type": "string"
        },
        "startTimeMillis": {
          "type": "integer",
          "format": "int64"
        },
        "stepMillis": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "MetricSetScope"
    },
    "PausedDetails": {
      "type": "object",
      "properties": {
        "pauseTime": {
          "type": "integer",
          "format": "int64"
        },
        "paused": {
          "type": "boolean"
        },
        "pausedBy": {
          "type": "string"
        },
        "pausedMs": {
          "type": "integer",
          "format": "int64"
        },
        "resumeTime": {
          "type": "integer",
          "format": "int64"
        },
        "resumedBy": {
          "type": "string"
        }
      },
      "title": "PausedDetails"
    },
    "PipelineExecution": {
      "type": "object",
      "properties": {
        "application": {
          "type": "string"
        },
        "authentication": {
          "$ref": "#/definitions/AuthenticationDetails"
        },
        "buildTime": {
          "type": "integer",
          "format": "int64"
        },
        "canceled": {
          "type": "boolean"
        },
        "canceledBy": {
          "type": "string"
        },
        "cancellationReason": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "keepWaitingPipelines": {
          "type": "boolean"
        },
        "limitConcurrent": {
          "type": "boolean"
        },
        "maxConcurrentExecutions": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Map«string,object»"
          }
        },
        "origin": {
          "type": "string"
        },
        "partition": {
          "type": "string"
        },
        "paused": {
          "$ref": "#/definitions/PausedDetails"
        },
        "pipelineConfigId": {
          "type": "string"
        },
        "source": {
          "$ref": "#/definitions/PipelineSource"
        },
        "spelEvaluator": {
          "type": "string"
        },
        "stages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StageExecution"
          }
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "startTimeExpiry": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "SUSPENDED",
            "SUCCEEDED",
            "FAILED_CONTINUE",
            "TERMINAL",
            "CANCELED",
            "REDIRECT",
            "STOPPED",
            "SKIPPED",
            "BUFFERED"
          ]
        },
        "templateVariables": {
          "type": "object"
        },
        "trigger": {
          "$ref": "#/definitions/Trigger"
        },
        "type": {
          "type": "string",
          "enum": [
            "pipeline",
            "orchestration"
          ]
        }
      },
      "title": "PipelineExecution"
    },
    "PipelineSource": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "title": "PipelineSource"
    },
    "ProcessedExecution": {
      "type": "object",
      "required": [
        "actions",
        "canApply"
      ],
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        },
        "canApply": {
          "type": "boolean"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ProcessedExecution"
    },
    "ResponseEntity": {
      "type": "object",
      "properties": {
        "body": {
          "type": "object"
        },
        "statusCode": {
          "type": "string",
          "enum": [
            "100 CONTINUE",
            "101 SWITCHING_PROTOCOLS",
            "102 PROCESSING",
            "103 CHECKPOINT",
            "200 OK",
            "201 CREATED",
            "202 ACCEPTED",
            "203 NON_AUTHORITATIVE_INFORMATION",
            "204 NO_CONTENT",
            "205 RESET_CONTENT",
            "206 PARTIAL_CONTENT",
            "207 MULTI_STATUS",
            "208 ALREADY_REPORTED",
            "226 IM_USED",
            "300 MULTIPLE_CHOICES",
            "301 MOVED_PERMANENTLY",
            "302 FOUND",
            "302 MOVED_TEMPORARILY",
            "303 SEE_OTHER",
            "304 NOT_MODIFIED",
            "305 USE_PROXY",
            "307 TEMPORARY_REDIRECT",
            "308 PERMANENT_REDIRECT",
            "400 BAD_REQUEST",
            "401 UNAUTHORIZED",
            "402 PAYMENT_REQUIRED",
            "403 FORBIDDEN",
            "404 NOT_FOUND",
            "405 METHOD_NOT_ALLOWED",
            "406 NOT_ACCEPTABLE",
            "407 PROXY_AUTHENTICATION_REQUIRED",
            "408 REQUEST_TIMEOUT",
            "409 CONFLICT",
            "410 GONE",
            "411 LENGTH_REQUIRED",
            "412 PRECONDITION_FAILED",
            "413 PAYLOAD_TOO_LARGE",
            "413 REQUEST_ENTITY_TOO_LARGE",
            "414 URI_TOO_LONG",
            "414 REQUEST_URI_TOO_LONG",
            "415 UNSUPPORTED_MEDIA_TYPE",
            "416 REQUESTED_RANGE_NOT_SATISFIABLE",
            "417 EXPECTATION_FAILED",
            "418 I_AM_A_TEAPOT",
            "419 INSUFFICIENT_SPACE_ON_RESOURCE",
            "420 METHOD_FAILURE",
            "421 DESTINATION_LOCKED",
            "422 UNPROCESSABLE_ENTITY",
            "423 LOCKED",
            "424 FAILED_DEPENDENCY",
            "425 TOO_EARLY",
            "426 UPGRADE_REQUIRED",
            "428 PRECONDITION_REQUIRED",
            "429 TOO_MANY_REQUESTS",
            "431 REQUEST_HEADER_FIELDS_TOO_LARGE",
            "451 UNAVAILABLE_FOR_LEGAL_REASONS",
            "500 INTERNAL_SERVER_ERROR",
            "501 NOT_IMPLEMENTED",
            "502 BAD_GATEWAY",
            "503 SERVICE_UNAVAILABLE",
            "504 GATEWAY_TIMEOUT",
            "505 HTTP_VERSION_NOT_SUPPORTED",
            "506 VARIANT_ALSO_NEGOTIATES",
            "507 INSUFFICIENT_STORAGE",
            "508 LOOP_DETECTED",
            "509 BANDWIDTH_LIMIT_EXCEEDED",
            "510 NOT_EXTENDED",
            "511 NETWORK_AUTHENTICATION_REQUIRED"
          ]
        },
        "statusCodeValue": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "ResponseEntity"
    },
    "StageExecution": {
      "type": "object",
      "properties": {
        "additionalMetricTags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "context": {
          "type": "object"
        },
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "execution": {
          "$ref": "#/definitions/PipelineExecution"
        },
        "id": {
          "type": "string"
        },
        "lastModified": {
          "$ref": "#/definitions/LastModifiedDetails"
        },
        "manualJudgmentType": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "outputs": {
          "type": "object"
        },
        "parentStageId": {
          "type": "string"
        },
        "refId": {
          "type": "string"
        },
        "requisiteStageRefIds": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "scheduledTime": {
          "type": "integer",
          "format": "int64"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "startTimeExpiry": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "SUSPENDED",
            "SUCCEEDED",
            "FAILED_CONTINUE",
            "TERMINAL",
            "CANCELED",
            "REDIRECT",
            "STOPPED",
            "SKIPPED",
            "BUFFERED"
          ]
        },
        "syntheticStageOwner": {
          "type": "string",
          "enum": [
            "STAGE_BEFORE",
            "STAGE_AFTER"
          ]
        },
        "tasks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskExecution"
          }
        },
        "type": {
          "type": "string"
        }
      },
      "title": "StageExecution"
    },
    "StageMetadata": {
      "type": "object",
      "properties": {
        "executionId": {
          "type": "string",
          "description": "The execution id if the StageExecution is a runCanary stage"
        },
        "name": {
          "type": "string",
          "description": "The StageExecution name"
        },
        "status": {
          "type": "string",
          "description": "The Orca execution status of the stage",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "SUSPENDED",
            "SUCCEEDED",
            "FAILED_CONTINUE",
            "TERMINAL",
            "CANCELED",
            "REDIRECT",
            "STOPPED",
            "SKIPPED",
            "BUFFERED"
          ]
        },
        "type": {
          "type": "string",
          "description": "The StageExecution type"
        }
      },
      "title": "StageMetadata",
      "description": "Metadata around an Orca StageExecution of the canary analysis pipeline execution"
    },
    "TaskExecution": {
      "type": "object",
      "properties": {
        "endTime": {
          "type": "integer",
          "format": "int64"
        },
        "id": {
          "type": "string"
        },
        "implementingClass": {
          "type": "string"
        },
        "loopEnd": {
          "type": "boolean"
        },
        "loopStart": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "stageEnd": {
          "type": "boolean"
        },
        "stageStart": {
          "type": "boolean"
        },
        "startTime": {
          "type": "integer",
          "format": "int64"
        },
        "status": {
          "type": "string",
          "enum": [
            "NOT_STARTED",
            "RUNNING",
            "PAUSED",
            "SUSPENDED",
            "SUCCEEDED",
            "FAILED_CONTINUE",
            "TERMINAL",
            "CANCELED",
            "REDIRECT",
            "STOPPED",
            "SKIPPED",
            "BUFFERED"
          ]
        },
        "taskExceptionDetails": {
          "type": "object"
        }
      },
      "title": "TaskExecution"
    },
    "TemporalUnit": {
      "type": "object",
      "properties": {
        "dateBased": {
          "type": "boolean"
        },
        "duration": {
          "$ref": "#/definitions/Duration"
        },
        "durationEstimated": {
          "type": "boolean"
        },
        "timeBased": {
          "type": "boolean"
        }
      },
      "title": "TemporalUnit"
    },
    "Trigger": {
      "type": "object",
      "properties": {
        "artifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Artifact"
          }
        },
        "correlationId": {
          "type": "string"
        },
        "dryRun": {
          "type": "boolean"
        },
        "notifications": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Map«string,object»"
          }
        },
        "parameters": {
          "type": "object"
        },
        "rebake": {
          "type": "boolean"
        },
        "resolvedExpectedArtifacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExpectedArtifact"
          }
        },
        "strategy": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      },
      "title": "Trigger"
    }
  }
}
